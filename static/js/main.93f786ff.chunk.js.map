{"version":3,"sources":["assets/cinema.png","components/Header.js","config.api/api.js","components/Movie.js","components/Movies.js","shared/addMovie.js","components/Form.js","components/SingleMovie.js","components/Main.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","linkStyle","color","textDecoration","Header","state","password","react_default","a","createElement","className","type","placeholder","Link","to","style","src","logo","alt","Component","deleteUrl","Movie","deleteMovie","e","preventDefault","_this$props$podaci","_this","props","podaci","naziv","_id","window","confirm","concat","fetch","method","headers","Content-Type","body","JSON","stringify","id","then","res","text","alert","location","replace","_this$props$podaci2","this","godina","slika","onClick","Movies","filmovi","filtered","isLoaded","sortMoviesVisible","toogleSortMovies","setState","sortByAtoZAsc","arr","sort","b","x","toLowerCase","y","sortByAtoZADec","sortByYearFromNewest","sortByYearFromOldest","searchMovies","event","movieName","target","value","filter","movie","indexOf","_this2","json","filmoviJSX","map","film","comments","key","pathname","Movie_Movie","onChange","display","addMovie","arguments","length","undefined","Accept","toUpperCase","reload","catch","console","log","Form","movieImg","movieYear","visible","handleInput","name","Object","defineProperty","_this$state","imagePreview","eventHandler","onSubmit","required","SingleMovie","handleSubmit","_this$props$location$","noviKomentar","user","comment","komentari","toConsumableArray","komentariJsx","k","i","error","Fragment","comm","Main","Switch","Route","exact","path","component","Footer","App","Header_Header","ime","components_Main","components_Footer","Boolean","hostname","match","ReactDOM","render","HashRouter","basename","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.93f786ff.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cinema.dc7320d7.png\";","import React, { Component } from 'react'\r\nimport logo from '../assets/cinema.png';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './Header.css';\r\n\r\nconst linkStyle = {\r\n  color: \"#fff\",\r\n  textDecoration: \"none\",\r\n}\r\n\r\nexport default class Header extends Component {\r\n\r\n  state = {\r\n    password: \"\"\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"App-header\">\r\n        <nav>\r\n\r\n          <input type='text' placeholder='Login' />\r\n\r\n          <span>\r\n          <Link to=\"/\" style={linkStyle}>Poƒçetna</Link>\r\n          <Link to=\"/addMovie\" style={linkStyle}>Dodaj film</Link>\r\n          </span>\r\n        </nav>\r\n        <div><Link to=\"/\"><img className=\"App-logo\" src={logo} alt=\"logo\" /> <h1>Baza filmova</h1></Link></div>\r\n\r\n      </header>\r\n    )\r\n  }\r\n}\r\n","export const getUrl = 'https://baza-filmova.herokuapp.com/filmovi/'\r\nexport const postUrl = 'https://baza-filmova.herokuapp.com/dodaj-film/'\r\nexport const deleteUrl = 'https://baza-filmova.herokuapp.com/obrisi-film/'","import React, { Component } from 'react';\r\nimport { deleteUrl } from '../config.api/api'\r\n\r\nexport default class Movie extends Component {\r\n    deleteMovie = e => {\r\n        e.preventDefault();\r\n        const { naziv, _id } = this.props.podaci;\r\n        if (window.confirm(`Delete movie: \"${naziv}\" ?`)) {\r\n            fetch(deleteUrl, {\r\n                method: \"DELETE\",\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify({ id: _id })\r\n            })\r\n                .then(res => res.text())\r\n                .then(res => {\r\n                    alert(res);\r\n                    window.location.replace(\"http://localhost:3000\")\r\n                });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { naziv, godina, slika } = this.props.podaci\r\n        return (\r\n            <div>\r\n                <h3>{naziv}</h3>\r\n                <div className=\"image-holder\">\r\n                    <span onClick={this.deleteMovie} className=\"delete-btn\">X</span>\r\n                    <img src={slika} alt={naziv} className=\"movieImg\" />\r\n                </div>\r\n                <p>{godina}</p>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\n// import filmovi from '../data/filmovi.json';\r\nimport './Movies.css';\r\nimport Movie from './Movie';\r\nimport { Link } from 'react-router-dom';\r\nimport { getUrl } from '../config.api/api';\r\n\r\n\r\nclass Movies extends Component {\r\n\r\n    state = {\r\n        filmovi: [],\r\n        filtered: [],\r\n        isLoaded: false,\r\n        sortMoviesVisible: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(getUrl)\r\n            .then(res => res.json())\r\n            .then(json => this.setState({\r\n                filmovi: json,\r\n                filtered: json,\r\n                isLoaded: true\r\n            }));\r\n    }\r\n\r\n    toogleSortMovies = () => {\r\n        this.setState({ sortMoviesVisible: !this.state.sortMoviesVisible })\r\n    }\r\n\r\n    sortByAtoZAsc = () => {\r\n        let arr = this.state.filmovi.sort((a, b) => {\r\n            let x = a.naziv.toLowerCase();\r\n            let y = b.naziv.toLowerCase();\r\n\r\n            if (x < y) {\r\n                return -1;\r\n            }\r\n            if (y < x) {\r\n                return 1\r\n            }\r\n            return 0;\r\n        })\r\n        this.setState({ filtered: arr })\r\n    }\r\n\r\n    sortByAtoZADec = () => {\r\n        let arr = this.state.filmovi.sort((a, b) => {\r\n            let x = a.naziv.toLowerCase();\r\n            let y = b.naziv.toLowerCase();\r\n\r\n            if (x > y) {\r\n                return -1;\r\n            }\r\n            if (y > x) {\r\n                return 1\r\n            }\r\n            return 0;\r\n        })\r\n        this.setState({ filtered: arr })\r\n    }\r\n\r\n    sortByYearFromNewest = () => {\r\n        let arr = this.state.filmovi.sort((a, b) => {\r\n            return b.godina - a.godina\r\n        })\r\n        this.setState({ filtered: arr })\r\n    }\r\n\r\n    sortByYearFromOldest = () => {\r\n        let arr = this.state.filmovi.sort((a, b) => {\r\n            return a.godina - b.godina\r\n        })\r\n        this.setState({ filtered: arr })\r\n    }\r\n\r\n    searchMovies = event => {\r\n        let movieName = event.target.value;\r\n        let filtered = this.state.filmovi.filter(movie => {\r\n            return movie.naziv.toLowerCase().indexOf(movieName.toLowerCase()) > -1\r\n        })\r\n\r\n        this.setState({ filtered })\r\n\r\n    }\r\n\r\n    render() {\r\n        const filmoviJSX = this.state.filtered.map(film => {\r\n            const { naziv, godina, slika, _id, comments } = film\r\n            return (\r\n                <div className=\"col-12 col-sm-6 col-md-4 col-lg-3\" key={_id}>\r\n                    <div className=\"movieBox\">\r\n                        <Link to={{\r\n                            pathname: `singleMovie/${_id}`,\r\n                            state: {\r\n                                naziv, godina, slika, _id, comments\r\n                            }\r\n                        }}>\r\n                            <Movie podaci={{ naziv, godina, slika, _id, comments }} />\r\n                        </Link ></div></div>\r\n            )\r\n        })\r\n\r\n        return (\r\n            <div>\r\n                <input type=\"text\" placeholder=\"Pretra≈æi filmove\" className=\"search-movie\" onChange={this.searchMovies} />\r\n                <div className=\"sortMovies\" style={this.state.sortMoviesVisible ? { display: \"block\" } : { display: \"none\" }}>\r\n                    <ul className=\"clearfix\">\r\n                        <li onClick={this.sortByAtoZAsc}><span>A - Z</span></li>\r\n                        <li onClick={this.sortByAtoZADec}><span>Z - A</span></li>\r\n                        <li onClick={this.sortByYearFromNewest}><span>Najnoviji</span></li>\r\n                        <li onClick={this.sortByYearFromOldest}><span>Najstariji</span></li>\r\n                    </ul>\r\n                </div>\r\n                <input id=\"sortMoviesBtn\" type=\"submit\" onClick={this.toogleSortMovies} value={this.state.sortMoviesVisible ? \"Sakrij meni\" : \"Sortiraj filmove\"} />\r\n                {\r\n                    this.state.isLoaded ?\r\n                        <div className=\"container-fluid moviesHolder\">\r\n                            <div className=\"row\">\r\n                                {filmoviJSX}\r\n                            </div>\r\n                        </div> :\r\n                        <img src=\"https://media.giphy.com/media/3oEjI6SIIHBdRxXI40/giphy.gif\" alt=\"Loading\" />\r\n                }\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Movies;","const addMovie = (naziv, godina, slika, comments = null) => {\r\n    fetch('https://baza-podataka.herokuapp.com/dodaj-film/', {\r\n        method: 'post',\r\n        headers: {\r\n            'Accept': 'application/json, text/plain, */*',\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({naziv, godina, slika, comments})\r\n    })\r\n        .then(res => {\r\n            alert(`Movie \" ${naziv.toUpperCase()}\" has been updated to movie base.\r\n        Thank you for updating!`)\r\n            window.location.reload();\r\n        }\r\n        )\r\n        .catch(e => console.log(e))\r\n}\r\n\r\nexport default addMovie;","import React, { Component } from 'react';\r\nimport './Form.css';\r\nimport addMovie from '../shared/addMovie';\r\n\r\nexport default class Form extends Component {\r\n\r\n    state = {\r\n        movieName:\"\",\r\n        movieImg:\"\",\r\n        movieYear:\"\",\r\n        visible:false,\r\n       }\r\n\r\n\r\n    handleInput = (event) => {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    // handleInput = (event) => {\r\n    //     const target = event.target;\r\n    //     this.setState({\r\n    //         [target.name]: target.value\r\n    //     });\r\n    // }\r\n\r\n    addMovie = (e) => {\r\n        e.preventDefault();\r\n        const {movieName, movieImg, movieYear} = this.state\r\n        addMovie(movieName, movieYear, movieImg)\r\n    }\r\n\r\n\r\n\r\n    imagePreview = (event) => {\r\n        let src = event.target.value;\r\n        this.setState({\r\n            movieImg : src\r\n        })\r\n    }\r\n\r\n    eventHandler = (event) => {\r\n        this.handleInput(event);\r\n        this.imagePreview(event);\r\n    }\r\n\r\n    render() {\r\n        let src = this.state.movieImg ? this.state.movieImg : \"http://icons-for-free.com/free-icons/png/512/283043.png\";\r\n        return (\r\n            <div className=\"newMovie\">\r\n                <h1>Dodaj Film</h1>\r\n                <form method=\"post\" onSubmit={this.addMovie}>\r\n                    <label>Naziv Filma</label>\r\n                    <input type=\"text\" name=\"movieName\" onChange={this.handleInput} placeholder=\"Dodaj naslov\" required />\r\n                    <label>Godina</label>\r\n                    <input type=\"text\" name=\"movieYear\" onChange={this.handleInput} placeholder=\"Dodaj godinu\" required />\r\n                    <label>Slika</label>\r\n                    <input type=\"text\" name=\"movieImg\" onChange={this.eventHandler} placeholder=\"Dodaj url slike\" required />\r\n                    <div className=\"imagePlaceholder\">\r\n                        <img src={src} alt=\"movieImg\"/>\r\n                    </div>\r\n                    <input type=\"submit\" value=\"Dodaj\" />\r\n                </form>\r\n            </div>\r\n        )\r\n\r\n\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Movie from \"./Movie\";\r\nimport addMovie from \"../shared/addMovie\";\r\n\r\nclass SingleMovie extends Component {\r\n    state = {};\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        const { naziv, godina, slika, comments } = this.props.location.state;\r\n\r\n        const noviKomentar = {\r\n            user: e.target.name.value,\r\n            comment: e.target.comment.value\r\n        };\r\n        const komentari = comments ? [...comments, noviKomentar] : [noviKomentar];\r\n        addMovie(naziv, godina, slika, komentari);\r\n    };\r\n\r\n    render() {\r\n        let komentariJsx;\r\n        try {\r\n            komentariJsx = this.props.location.state.comments.map((k, i) => (\r\n                <div key={i}>\r\n                    <small>{k.user}</small>\r\n                    <p>{k.comment}</p>\r\n                </div>\r\n            ));\r\n        } catch (error) {\r\n            komentariJsx = <p>Budite prvi koji ƒáe ostaviti komentar</p>;\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <Link to=\"/\">&lt; Back</Link>\r\n                <Movie podaci={this.props.location.state} />\r\n                <p>{this.state.comm}</p>\r\n                {komentariJsx}\r\n                <form onSubmit={this.handleSubmit} className=\"single-movie-form\">\r\n                    <label>Korisnik: </label><br />\r\n                    <input name=\"name\" /><br />\r\n                    <label>Komentar: </label><br />\r\n                    <textarea name=\"comment\"></textarea>\r\n                    <input type=\"submit\" value=\"Po≈°alji\" />\r\n                </form>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SingleMovie;\r\n","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\nimport Movies from './Movies';\r\nimport Form from './Form';\r\nimport SingleMovie from './SingleMovie'\r\n\r\nconst Main = () => (\r\n    <main>\r\n        <Switch>\r\n            <Route exact path='/' component={Movies} />\r\n            <Route path='/addMovie' component={Form} />\r\n            <Route path='/singlemovie/:id' component={SingleMovie}/>\r\n        </Switch>\r\n    </main>\r\n)\r\n\r\nexport default Main;","import React, { Component } from 'react';\r\n\r\n\r\nclass Footer extends Component {\r\n    render() {\r\n        return (\r\n            <footer>\r\n                <small>Copyright &copy; Emil 2018</small>\r\n            </footer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './App.css';\r\n\r\nimport Header from './components/Header';\r\nimport Main from './components/Main';\r\nimport Footer from './components/Footer';\r\n\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Header ime=\"Emil\"/>\r\n        <Main />\r\n        <Footer />\r\n        \r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n\r\n              // Execute callback\r\n              if (config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconst basename = process.env.NODE_ENV === 'development' ? '/' : '/baza-filmova';\r\nconsole.log(basename);\r\n\r\n\r\nReactDOM.render(\r\n    <HashRouter basename={basename}>\r\n        <App />\r\n    </HashRouter>\r\n    , document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}