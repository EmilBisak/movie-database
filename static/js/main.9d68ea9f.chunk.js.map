{"version":3,"sources":["assets/cinema.png","components/Header.js","config.api/api.js","components/Movie.js","components/Movies.js","shared/addMovie.js","components/Form.js","components/SingleMovie.js","components/Main.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","linkStyle","color","textDecoration","Header","state","password","react_default","a","createElement","className","Link","to","style","src","logo","alt","Component","deleteUrl","Movie","deleteMovie","e","preventDefault","_this$props$podaci","_this","props","podaci","naziv","_id","window","confirm","concat","fetch","method","headers","Content-Type","body","JSON","stringify","id","then","res","text","alert","location","reload","_this$props$podaci2","this","godina","slika","onClick","Movies","filmovi","filtered","isLoaded","sortMoviesVisible","toogleSortMovies","setState","sortByAtoZAsc","arr","sort","b","x","toLowerCase","y","sortByAtoZADec","sortByYearFromNewest","sortByYearFromOldest","searchMovies","event","movieName","target","value","filter","movie","indexOf","_this2","json","filmoviJSX","map","film","comments","key","pathname","Movie_Movie","type","placeholder","onChange","display","addMovie","arguments","length","undefined","Accept","toUpperCase","catch","console","log","Form","movieImg","movieYear","visible","handleInput","name","Object","defineProperty","_this$state","imagePreview","eventHandler","onSubmit","required","SingleMovie","handleSubmit","_this$props$location$","noviKomentar","user","comment","komentari","toConsumableArray","komentariJsx","k","i","error","Fragment","comm","Main","Switch","Route","exact","path","component","Footer","App","Header_Header","ime","components_Main","components_Footer","Boolean","hostname","match","ReactDOM","render","HashRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9d68ea9f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cinema.dc7320d7.png\";","import React, { Component } from 'react'\r\nimport logo from '../assets/cinema.png';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './Header.css';\r\n\r\nconst linkStyle = {\r\n  color: \"#fff\",\r\n  textDecoration: \"none\",\r\n}\r\n\r\nexport default class Header extends Component {\r\n\r\n  state = {\r\n    password: \"\"\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"App-header\">\r\n        <nav>\r\n\r\n          {/* <input type='text' placeholder='Login' /> */}\r\n\r\n          <span>\r\n          <Link to=\"/\" style={linkStyle}>Poƒçetna</Link>\r\n          <Link to=\"/addMovie\" style={linkStyle}>Dodaj film</Link>\r\n          </span>\r\n        </nav>\r\n        <div><Link to=\"/\"><img className=\"App-logo\" src={logo} alt=\"logo\" /> <h1>Baza filmova</h1></Link></div>\r\n\r\n      </header>\r\n    )\r\n  }\r\n}\r\n","export const getUrl = 'https://baza-filmova.herokuapp.com/filmovi/'\r\nexport const postUrl = 'https://baza-filmova.herokuapp.com/dodaj-film/'\r\nexport const deleteUrl = 'https://baza-filmova.herokuapp.com/obrisi-film/'","import React, { Component } from 'react';\r\nimport { deleteUrl } from '../config.api/api'\r\n\r\nexport default class Movie extends Component {\r\n    deleteMovie = e => {\r\n        e.preventDefault();\r\n        const { naziv, _id } = this.props.podaci;\r\n        if (window.confirm(`Delete movie: \"${naziv}\" ?`)) {\r\n            fetch(deleteUrl, {\r\n                method: \"DELETE\",\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify({ id: _id })\r\n            })\r\n                .then(res => res.text())\r\n                .then(res => {\r\n                    alert(res);\r\n                    window.location.reload()\r\n                });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { naziv, godina, slika } = this.props.podaci\r\n        return (\r\n            <div>\r\n                <h3>{naziv}</h3>\r\n                <div className=\"image-holder\">\r\n                    <span onClick={this.deleteMovie} className=\"delete-btn\">X</span>\r\n                    <img src={slika} alt={naziv} className=\"movieImg\" />\r\n                </div>\r\n                <p>{godina}</p>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\n// import filmovi from '../data/filmovi.json';\r\nimport './Movies.css';\r\nimport Movie from './Movie';\r\nimport { Link } from 'react-router-dom';\r\nimport { getUrl } from '../config.api/api';\r\n\r\n\r\nclass Movies extends Component {\r\n\r\n    state = {\r\n        filmovi: [],\r\n        filtered: [],\r\n        isLoaded: false,\r\n        sortMoviesVisible: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(getUrl)\r\n            .then(res => res.json())\r\n            .then(json => this.setState({\r\n                filmovi: json,\r\n                filtered: json,\r\n                isLoaded: true\r\n            }));\r\n    }\r\n\r\n    toogleSortMovies = () => {\r\n        this.setState({ sortMoviesVisible: !this.state.sortMoviesVisible })\r\n    }\r\n\r\n    sortByAtoZAsc = () => {\r\n        let arr = this.state.filmovi.sort((a, b) => {\r\n            let x = a.naziv.toLowerCase();\r\n            let y = b.naziv.toLowerCase();\r\n\r\n            if (x < y) {\r\n                return -1;\r\n            }\r\n            if (y < x) {\r\n                return 1\r\n            }\r\n            return 0;\r\n        })\r\n        this.setState({ filtered: arr })\r\n    }\r\n\r\n    sortByAtoZADec = () => {\r\n        let arr = this.state.filmovi.sort((a, b) => {\r\n            let x = a.naziv.toLowerCase();\r\n            let y = b.naziv.toLowerCase();\r\n\r\n            if (x > y) {\r\n                return -1;\r\n            }\r\n            if (y > x) {\r\n                return 1\r\n            }\r\n            return 0;\r\n        })\r\n        this.setState({ filtered: arr })\r\n    }\r\n\r\n    sortByYearFromNewest = () => {\r\n        let arr = this.state.filmovi.sort((a, b) => {\r\n            return b.godina - a.godina\r\n        })\r\n        this.setState({ filtered: arr })\r\n    }\r\n\r\n    sortByYearFromOldest = () => {\r\n        let arr = this.state.filmovi.sort((a, b) => {\r\n            return a.godina - b.godina\r\n        })\r\n        this.setState({ filtered: arr })\r\n    }\r\n\r\n    searchMovies = event => {\r\n        let movieName = event.target.value;\r\n        let filtered = this.state.filmovi.filter(movie => {\r\n            return movie.naziv.toLowerCase().indexOf(movieName.toLowerCase()) > -1\r\n        })\r\n\r\n        this.setState({ filtered })\r\n\r\n    }\r\n\r\n    render() {\r\n        const filmoviJSX = this.state.filtered.map(film => {\r\n            const { naziv, godina, slika, _id, comments } = film\r\n            return (\r\n                <div className=\"col-12 col-sm-6 col-md-4 col-lg-3\" key={_id}>\r\n                    <div className=\"movieBox\">\r\n                        <Link to={{\r\n                            pathname: `singleMovie/${_id}`,\r\n                            state: {\r\n                                naziv, godina, slika, _id, comments\r\n                            }\r\n                        }}>\r\n                            <Movie podaci={{ naziv, godina, slika, _id, comments }} />\r\n                        </Link ></div></div>\r\n            )\r\n        })\r\n\r\n        return (\r\n            <div>\r\n                <input type=\"text\" placeholder=\"Pretra≈æi filmove\" className=\"search-movie\" onChange={this.searchMovies} />\r\n                <div className=\"sortMovies\" style={this.state.sortMoviesVisible ? { display: \"block\" } : { display: \"none\" }}>\r\n                    <ul className=\"clearfix\">\r\n                        <li onClick={this.sortByAtoZAsc}><span>A - Z</span></li>\r\n                        <li onClick={this.sortByAtoZADec}><span>Z - A</span></li>\r\n                        <li onClick={this.sortByYearFromNewest}><span>Najnoviji</span></li>\r\n                        <li onClick={this.sortByYearFromOldest}><span>Najstariji</span></li>\r\n                    </ul>\r\n                </div>\r\n                <input id=\"sortMoviesBtn\" type=\"submit\" onClick={this.toogleSortMovies} value={this.state.sortMoviesVisible ? \"Sakrij meni\" : \"Sortiraj filmove\"} />\r\n                {\r\n                    this.state.isLoaded ?\r\n                        <div className=\"container-fluid moviesHolder\">\r\n                            <div className=\"row\">\r\n                                {filmoviJSX}\r\n                            </div>\r\n                        </div> :\r\n                        <img src=\"https://media.giphy.com/media/3oEjI6SIIHBdRxXI40/giphy.gif\" alt=\"Loading\" />\r\n                }\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Movies;","const addMovie = (naziv, godina, slika, comments = null) => {\r\n    fetch('https://baza-podataka.herokuapp.com/dodaj-film/', {\r\n        method: 'post',\r\n        headers: {\r\n            'Accept': 'application/json, text/plain, */*',\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({naziv, godina, slika, comments})\r\n    })\r\n        .then(res => {\r\n            alert(`Movie \" ${naziv.toUpperCase()}\" has been updated to movie base.\r\n        Thank you for updating!`)\r\n            window.location.reload();\r\n        }\r\n        )\r\n        .catch(e => console.log(e))\r\n}\r\n\r\nexport default addMovie;","import React, { Component } from 'react';\r\nimport './Form.css';\r\nimport addMovie from '../shared/addMovie';\r\n\r\nexport default class Form extends Component {\r\n\r\n    state = {\r\n        movieName:\"\",\r\n        movieImg:\"\",\r\n        movieYear:\"\",\r\n        visible:false,\r\n       }\r\n\r\n\r\n    handleInput = (event) => {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    // handleInput = (event) => {\r\n    //     const target = event.target;\r\n    //     this.setState({\r\n    //         [target.name]: target.value\r\n    //     });\r\n    // }\r\n\r\n    addMovie = (e) => {\r\n        e.preventDefault();\r\n        const {movieName, movieImg, movieYear} = this.state\r\n        addMovie(movieName, movieYear, movieImg)\r\n    }\r\n\r\n\r\n\r\n    imagePreview = (event) => {\r\n        let src = event.target.value;\r\n        this.setState({\r\n            movieImg : src\r\n        })\r\n    }\r\n\r\n    eventHandler = (event) => {\r\n        this.handleInput(event);\r\n        this.imagePreview(event);\r\n    }\r\n\r\n    render() {\r\n        let src = this.state.movieImg ? this.state.movieImg : \"http://icons-for-free.com/free-icons/png/512/283043.png\";\r\n        return (\r\n            <div className=\"newMovie\">\r\n                <h1>Dodaj Film</h1>\r\n                <form method=\"post\" onSubmit={this.addMovie}>\r\n                    <label>Naziv Filma</label>\r\n                    <input type=\"text\" name=\"movieName\" onChange={this.handleInput} placeholder=\"Dodaj naslov\" required />\r\n                    <label>Godina</label>\r\n                    <input type=\"text\" name=\"movieYear\" onChange={this.handleInput} placeholder=\"Dodaj godinu\" required />\r\n                    <label>Slika</label>\r\n                    <input type=\"text\" name=\"movieImg\" onChange={this.eventHandler} placeholder=\"Dodaj url slike\" required />\r\n                    <div className=\"imagePlaceholder\">\r\n                        <img src={src} alt=\"movieImg\"/>\r\n                    </div>\r\n                    <input type=\"submit\" value=\"Dodaj\" />\r\n                </form>\r\n            </div>\r\n        )\r\n\r\n\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Movie from \"./Movie\";\r\nimport addMovie from \"../shared/addMovie\";\r\n\r\nclass SingleMovie extends Component {\r\n    state = {};\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        const { naziv, godina, slika, comments } = this.props.location.state;\r\n\r\n        const noviKomentar = {\r\n            user: e.target.name.value,\r\n            comment: e.target.comment.value\r\n        };\r\n        const komentari = comments ? [...comments, noviKomentar] : [noviKomentar];\r\n        addMovie(naziv, godina, slika, komentari);\r\n    };\r\n\r\n    render() {\r\n        let komentariJsx;\r\n        try {\r\n            komentariJsx = this.props.location.state.comments.map((k, i) => (\r\n                <div key={i}>\r\n                    <small>{k.user}</small>\r\n                    <p>{k.comment}</p>\r\n                </div>\r\n            ));\r\n        } catch (error) {\r\n            komentariJsx = <p>Budite prvi koji ƒáe ostaviti komentar</p>;\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <Link to=\"/\">&lt; Back</Link>\r\n                <Movie podaci={this.props.location.state} />\r\n                <p>{this.state.comm}</p>\r\n                {komentariJsx}\r\n                <form onSubmit={this.handleSubmit} className=\"single-movie-form\">\r\n                    <label>Korisnik: </label><br />\r\n                    <input name=\"name\" /><br />\r\n                    <label>Komentar: </label><br />\r\n                    <textarea name=\"comment\"></textarea>\r\n                    <input type=\"submit\" value=\"Po≈°alji\" />\r\n                </form>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SingleMovie;\r\n","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\nimport Movies from './Movies';\r\nimport Form from './Form';\r\nimport SingleMovie from './SingleMovie'\r\n\r\nconst Main = () => (\r\n    <main>\r\n        <Switch>\r\n            <Route exact path='/' component={Movies} />\r\n            <Route path='/addMovie' component={Form} />\r\n            <Route path='/singlemovie/:id' component={SingleMovie}/>\r\n        </Switch>\r\n    </main>\r\n)\r\n\r\nexport default Main;","import React, { Component } from 'react';\r\n\r\n\r\nclass Footer extends Component {\r\n    render() {\r\n        return (\r\n            <footer>\r\n                <small>Copyright &copy; Emil 2018</small>\r\n            </footer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './App.css';\n\nimport Header from './components/Header';\nimport Main from './components/Main';\nimport Footer from './components/Footer';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header ime=\"Emil\"/>\n        <Main />\n        <Footer />\n        \n      </div>\n\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n// const basename = process.env.NODE_ENV === 'development' ? '/' : '/baza-filmova';\r\n// console.log(basename);\r\n\r\n\r\nReactDOM.render(\r\n    <HashRouter>\r\n        <App />\r\n    </HashRouter>\r\n    , document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}